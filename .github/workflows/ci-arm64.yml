name: Build OpenSSL Arm64

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      openssl_build:
        description: 'OpenSSL Arm64'
        required: false
        default: true
        type: boolean
      openssl_clang_build:
        description: 'OpenSSL with clang-cl Arm64'
        required: false
        default: true
        type: boolean

jobs:
  build-openssl-arm64:
    runs-on: [self-hosted, Windows, ARM64, GCC]
    timeout-minutes: 600

    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    
    - name: Build OpenSSL Arm64
      shell: cmd
      run: |
        echo on
        call "%ProgramFiles%\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat" arm64
        set VSCMD_DEBUG=3
        set PATH=%PATH%;%VCINSTALLDIR%\Tools\Llvm\ARM64\bin
        perl Configure VC-WIN64-ARM
        nmake
#        nmake test
        .\apps\openssl.exe speed 2> benchmark.txt
        type benchmark.txt

  build-openssl-clang-arm64:
    runs-on: [self-hosted, Windows, ARM64, GCC]
    timeout-minutes: 600

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Build OpenSSL with clang-cl Arm64
      shell: cmd
      run: |
        echo on
        call "%ProgramFiles%\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat" arm64
        set VSCMD_DEBUG=3
        set PATH=%PATH%;%VCINSTALLDIR%\Tools\Llvm\ARM64\bin
        perl Configure VC-CLANG-WIN64-CLANGASM-ARM
        nmake
#        nmake test
        .\apps\openssl.exe speed 2> benchmark.txt
        type benchmark.txt

  build-openssl-aarch64:
    runs-on: [self-hosted, Linux, ARM64, GCC]
    timeout-minutes: 600

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Build OpenSSL Aarch64
      run: |
        ./Configure
        cat Makefile | sed -E 's/apps\/libapps.a -lssl -lcrypto/apps\/libapps.a libssl.a libcrypto.a/' > Makefile.tmp
        mv Makefile.tmp Makefile
        make
#        make test
        LD_LIBRARY_PATH=$(pwd) apps/openssl speed > benchmark.txt 2>&1
        cat benchmark.txt
