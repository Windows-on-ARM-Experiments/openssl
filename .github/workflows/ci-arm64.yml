name: Build OpenSSL Arm64

on:
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:
    inputs:
      repository: 
        description: 'Repository name'
        required: false
        type: string
      branch:
        description: 'Branch name'
        required: false
        type: string
      openssl_windows_arm64_msvc_build:
        description: 'OpenSSL Windows Arm64 MSVC build'
        required: false
        default: true
        type: boolean
      openssl_windows_arm64_clangcl_build:
        description: 'OpenSSL Windows Arm64 clang-cl build'
        required: false
        default: true
        type: boolean
      openssl_linux_aarch64_gcc_build:
        description: 'OpenSSL Linux AArch64 gcc build'
        required: false
        default: true
        type: boolean
      benchmark:
        description: 'Execute benchmark'
        required: false
        default: true
        type: boolean
      verify_benchmark:
        description: 'Verify benchmark regression'
        required: false
        default: true
        type: boolean
      benchmark_snapshot:
        description: 'Create benchmark snapshot'
        required: false
        default: false
        type: boolean
  workflow_call:
    inputs:
      repository: 
        description: 'Repository name'
        required: false
        type: string
      branch:
        description: 'Branch name'
        required: false
        type: string

jobs:
  build-openssl-windows-arm64-msvc:
    if: ${{ inputs.openssl_windows_arm64_msvc_build }}

    runs-on: [self-hosted, Windows, ARM64, GCC, D2ps_v5]
    timeout-minutes: 600

    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repository }} 
        ref: ${{ inputs.branch }}
    
    - name: Build OpenSSL on Windows Arm64 with MSVC
      shell: cmd
      run: |
        echo on
        git remote add WoA https://github.com/Windows-on-ARM-Experiments/openssl.git
        git fetch WoA ${{ github.event.repository.default_branch }}
        git checkout WoA/${{ github.event.repository.default_branch }} -- .github/workflows/scripts
        call "%ProgramFiles%\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat" arm64
        set VSCMD_DEBUG=3
        set PATH=%PATH%;%VCINSTALLDIR%\Tools\Llvm\ARM64\bin
        perl Configure VC-WIN64-ARM
        nmake
        if %errorlevel% neq 0 ( exit 1 )
        nmake test
        if %errorlevel% neq 0 ( exit 1 )
        call .github\workflows\scripts\benchmark.bat 2> benchmark_arm64_msvc.txt
        if %errorlevel% neq 0 ( exit 1 )
        type benchmark_arm64_msvc.txt

    - name: Archive openssl_windows_arm64_msvc_benchmark.zip
      uses: actions/upload-artifact@v3
      if: ${{ inputs.benchmark }} || ${{ inputs.benchmark_snapshot }}
      with:
        name: openssl_windows_arm64_msvc_benchmark.zip
        path: benchmark_arm64_msvc.txt
        retention-days: 3

  build-openssl-windows-arm64-clangcl:
    if: ${{ inputs.openssl_windows_arm64_clangcl_build }}

    runs-on: [self-hosted, Windows, ARM64, GCC, D2ps_v5]
    timeout-minutes: 600

    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repository }} 
        ref: ${{ inputs.branch }}

    - name: Build OpenSSL on Windows Arm64 with clang-cl
      shell: cmd
      run: |
        echo on
        git remote add WoA https://github.com/Windows-on-ARM-Experiments/openssl.git
        git fetch WoA ${{ github.event.repository.default_branch }}
        git checkout WoA/${{ github.event.repository.default_branch }} -- .github/workflows/scripts
        call "%ProgramFiles%\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat" arm64
        set VSCMD_DEBUG=3
        set PATH=%PATH%;%VCINSTALLDIR%\Tools\Llvm\ARM64\bin
        perl Configure VC-CLANG-WIN64-CLANGASM-ARM
        nmake
        if %errorlevel% neq 0 ( exit 1 )
        nmake test
        if %errorlevel% neq 0 ( exit 1 )
        call .github\workflows\scripts\benchmark.bat 2> benchmark_arm64_clangcl.txt
        if %errorlevel% neq 0 ( exit 1 )
        type benchmark_arm64_clangcl.txt

    - name: Archive openssl_windows_arm64_clangcl_benchmark.zip
      uses: actions/upload-artifact@v3
      if: ${{ inputs.benchmark }} || ${{ inputs.benchmark_snapshot }}
      with:
        name: openssl_windows_arm64_clangcl_benchmark.zip
        path: benchmark_arm64_clangcl.txt
        retention-days: 3

  build-openssl-linux-aarch64-gcc:
    if: ${{ inputs.openssl_linux_aarch64_gcc_build }}

    runs-on: [self-hosted, Linux, ARM64, GCC, D2ps_v5]
    timeout-minutes: 600

    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repository }} 
        ref: ${{ inputs.branch }}

    - name: Build OpenSSL on Linux AArch64 with GCC
      run: |
        git remote | grep WoA && git remote remove WoA
        git remote add WoA https://github.com/Windows-on-ARM-Experiments/openssl.git
        git fetch WoA ${{ github.event.repository.default_branch }}
        git checkout WoA/${{ github.event.repository.default_branch }} -- .github/workflows/scripts
        ./Configure
        make
        make test
        .github/workflows/scripts/benchmark.sh > benchmark_aarch64_gcc.txt 2>&1
        cat benchmark_aarch64_gcc.txt

    - name: Archive openssl_linux_aarch64_gcc_benchmark.zip
      uses: actions/upload-artifact@v3
      if: ${{ inputs.benchmark }} || ${{ inputs.benchmark_snapshot }}
      with:
        name: openssl_linux_aarch64_gcc_benchmark.zip
        path: benchmark_aarch64_gcc.txt
        retention-days: 3

  verify-benchmark-regression:
    if: ${{ inputs.verify_benchmark }}
    needs: [build-openssl-windows-arm64-clangcl, build-openssl-linux-aarch64-gcc]

    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Dowload openssl_linux_aarch64_gcc_benchmark.zip
      uses: actions/download-artifact@v3
      with:
        name: openssl_linux_aarch64_gcc_benchmark.zip

    - name: Dowload openssl_windows_arm64_clangcl_benchmark.zip
      uses: actions/download-artifact@v3
      with:
        name: openssl_windows_arm64_clangcl_benchmark.zip

    - name: Verify benchmark regression
      run: |
        set -x
        git fetch origin ${{ github.event.repository.default_branch }}
        . .github/workflows/scripts/benchmark.sh verify_benchmark_regression

  create-benchmark-snapshot:
    if: ${{ inputs.benchmark_snapshot }}
    needs: [build-openssl-windows-arm64-clangcl, build-openssl-linux-aarch64-gcc]

    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Dowload openssl_linux_aarch64_gcc_benchmark.zip
      uses: actions/download-artifact@v3
      with:
        name: openssl_linux_aarch64_gcc_benchmark.zip

    - name: Dowload openssl_windows_arm64_clangcl_benchmark.zip
      uses: actions/download-artifact@v3
      with:
        name: openssl_windows_arm64_clangcl_benchmark.zip

    - name: Create PR for a benchmark snapshot
      run: |
        set -x
        . .github/workflows/scripts/benchmark.sh create_benchmark_snapshot_pr
      env:
        BRANCH: ${{ inputs.branch }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
